name: CI

on:
  pull_request:
  merge_group:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@3cf7f8cc28d1b4e7d01e3783be10a97d55d483c8
      - uses: arduino/setup-protoc@v3
      - uses: actions/setup-go@v5
      - run: cargo test --release

  rustfmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@3cf7f8cc28d1b4e7d01e3783be10a97d55d483c8
      - run: cargo fmt --check

  clippy:
    name: Check linter
    runs-on: ubuntu-latest
    env:
      # Make sure CI fails on all warnings - including Clippy lints.
      RUSTFLAGS: "-Dwarnings"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@3cf7f8cc28d1b4e7d01e3783be10a97d55d483c8
      - uses: arduino/setup-protoc@v3
      - run: cargo lint

  typos:
    name: Check typos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: typos-action
        uses: crate-ci/typos@v1.16.23

  verify-installation-script:
    name: Verify installation script
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest

          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest

          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest

          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest

          - target: x86_64-apple-darwin
            os: macos-latest

          - target: aarch64-apple-darwin
            os: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install and check
        shell: bash
        run: |
          bash ./scripts/install.sh
          
          source ~/.bashrc
          
          if ! command -v cairo-profiler &> /dev/null; then
            echo "cairo-profiler was not installed"
            exit 1
          fi
